
// @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
// @import "~bootstrap-icons/font/bootstrap-icons.css";
@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&display=swap');
@import url('https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined');
@import url('./assets/device/devices.min.css');
body{
  font-family: "Nunito Sans", sans-serif;
}

// // Mixin to prefix several properties at once
// // @author Hugo Giraudel
// // @param {Map} $declarations - Declarations to prefix
// // @param {List} $prefixes (()) - List of prefixes to print
// @mixin prefix($declarations, $prefixes: ()) {
//   @each $property, $value in $declarations {
//     @each $prefix in $prefixes {
//       #{'-' + $prefix + '-' + $property}: $value;
//     }
//     #{$property}: $value;
//   }
// }

// // Gives a card depth effect.
// // @param {Number} $depth - depth level (between 1 and 5)
// // @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
// // @requires {function} top-shadow
// // @requires {function} bottom-shadow
// @mixin depth($depth) {
//   @if $depth < 1 {
//     box-shadow: none;
//   } @else if $depth > 5 {
//     @warn "Invalid $depth `#{$depth}` for mixin `card`.";
//   } @else {
//     box-shadow: bottom-shadow($depth), top-shadow($depth);
//   }
// }

// // Computes a top-shadow for a card effect.
// // @param {Number} $depth - depth level
// // @return {List}

// @function top-shadow($depth) {
//   $primary-offset: nth($shadow-offsets-top, $depth) * 1px;
//   $blur: nth($shadow-blurs-top, $depth) * 4px;
//   $color: rgba(black, nth($shadow-opacities-top, $depth));

//   @return 0 $primary-offset $blur $color;
// }

// // Computes a bottom-shadow for a card effect.
// // @param {Number} $depth - depth level
// // @return {List}
// @function bottom-shadow($depth) {
//   $primary-offset: nth($shadow-offsets-bottom, $depth) * 1px;
//   $blur: nth($shadow-blurs-bottom, $depth) * 5px;
//   $color: rgba(black, nth($shadow-opacities-bottom, $depth));
//   @return 0 $primary-offset $blur $color;
// }

// @mixin clearfix() {
//   &::after {
//     display: block;
//     content: "";
//     clear: both;
//   }
// }



// //Responsive Breakpoints

// $breakpoints: (
//   xxs: 420px,
//   xs: 576px,
//   sm: 768px,
//   md: 992px,
//   lg: 1200px,
//   xl: 1440px
// );

// @mixin respond-below($breakpoint) {
//   // If the breakpoint exists in the map.
//   @if map-has-key($breakpoints, $breakpoint) {
//     // Get the breakpoint value.
//     $breakpoint-value: map-get(
//       $breakpoints,
//       $breakpoint
//     ); // Write the media query.
//     @media (max-width: ($breakpoint-value - 1)) {
//       @content;
//     }
//     // If the breakpoint doesn't exist in the map.
//   } @else {
//     // Log a warning.
//     @warn "Invalid breakpoint: #{$breakpoint}.";
//   }
// }

// @mixin respond-above($breakpoint) {
//   // If the breakpoint exists in the map.
//   @if map-has-key($breakpoints, $breakpoint) {
//     // Get the breakpoint value.
//     $breakpoint-value: map-get(
//       $breakpoints,
//       $breakpoint
//     ); // Write the media query.
//     @media (min-width: ($breakpoint-value - 1)) {
//       @content;
//     }
//     // If the breakpoint doesn't exist in the map.
//   } @else {
//     // Log a warning.
//     @warn "Invalid breakpoint: #{$breakpoint}.";
//   }
// }

// @function encodecolor($string) {
// 	@if type-of($string) == 'color' {
//         $hex: str-slice(ie-hex-str($string), 4);
//         $string:unquote("#{$hex}");
//     }
//     $string: '%23' + $string;
// 	@return $string;
// }




// .modal-right {
//   padding-right: 0 !important;

//   &.modal-dialog {
//     margin: 0 auto;
//     margin-right: 0;
//     margin-top: 0;
//     margin-bottom: 0;
//     height: 100%;
//     // max-width: 380px;
//   }

//   .modal-content {
//     min-height: 100%;
//     border-radius: 0.1rem !important;
//   }

//   .modal-header {
//     flex: 0 0 100px;

//     @include respond-below(xl) {
//       flex: 0 0 90px;
//     }

//     @include respond-below(lg) {
//       flex: 0 0 80px;
//     }

//     @include respond-below(sm) {
//       flex: 0 0 70px;
//     }
//   }

//   .modal-footer {
//     justify-content: center;
//     flex-grow: 0;
//     flex-shrink: 0;
//   }

//   .modal.fade & {
//     transform: translate(25%, 0);
//   }

//   .modal.show & {
//     transform: translate(0, 0);
//   }
// }

// .modal-left {
//   padding-left: 0 !important;

//   &.modal-dialog {
//     margin: 0 auto;
//     margin-left: 0;
//     margin-top: 0;
//     margin-bottom: 0;
//     height: 100%;
//     max-width: 380px;
//   }

//   .modal-content {
//     min-height: 100%;
//     border-radius: 0.1rem !important;
//   }

//   .modal-header {
//     flex: 0 0 100px;

//     @include respond-below(xl) {
//       flex: 0 0 90px;
//     }

//     @include respond-below(lg) {
//       flex: 0 0 80px;
//     }

//     @include respond-below(sm) {
//       flex: 0 0 70px;
//     }
//   }

//   .modal-footer {
//     justify-content: center;
//     flex-grow: 0;
//     flex-shrink: 0;
//   }

//   .modal.fade & {
//     transform: translate(-25%, 0);
//   }

//   .modal.show & {
//     transform: translate(0, 0);
//   }
// }

// a:hover{
//   cursor: pointer;
// }

// .btn-shadow{
//   background-color: rgba(86,61,124,.15);
//   width:2rem;
//   height:2rem;
//   border-radius: 50%;
// }
// .btn-shadow a{
//   text-decoration: none;
//   display: block;
//   display:block; height:100%; width:100%;
//   border-radius: 50%;
// }
// .btn-shadow a:hover{
//   cursor: pointer;
// }